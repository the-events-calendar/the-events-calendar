name: "Reusable: Analyze Changes"

on:
  workflow_call:
    inputs:
      compare-commit:
        description: "Commit to compare against (default: latest tag)"
        required: false
        type: string
        default: ""
      output-format:
        description: "Output format: changelog, list, or html"
        required: false
        type: string
        default: "changelog"
      # Allow passing through any additional inputs for future extensibility
      additional-inputs:
        description: "Additional inputs to pass through (JSON string)"
        required: false
        type: string
        default: "{}"

jobs:
  analyze-changes:
    name: "Analyze Changes"
    runs-on: ubuntu-latest
    outputs:
      analysis-summary:
        description: "Summary of analyzed changes"
        value: ${{ steps.set-summary.outputs.summary }}
      changes-detected:
        description: "Whether any changes were detected"
        value: ${{ steps.analyze-changes.outputs.changes-detected }}
    steps:
      - name: Setup environment
        uses: ./.github/workflows/reusable/basic-setup.yml
        with:
          setup-php: false
          setup-node: false
          fetch-depth: 0

      - name: Analyze changes
        id: analyze-changes
        run: |
          # Determine compare commit
          COMPARE_COMMIT="${{ inputs.compare-commit }}"
          if [ -z "$COMPARE_COMMIT" ]; then
            COMPARE_COMMIT=$(git describe --tags $(git rev-list --tags --max-count=1))
          fi

          echo "Comparing against: $COMPARE_COMMIT"

          # Get the diff
          DIFF=$(git diff -U0 "$COMPARE_COMMIT" -- src/ 2>/dev/null || git diff -U0 "$COMPARE_COMMIT" -- . 2>/dev/null)

          if [ -z "$DIFF" ]; then
            echo "No changes detected"
            echo "changes-detected=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Initialize results
          FILTERS_ADDED=()
          FILTERS_REMOVED=()
          ACTIONS_ADDED=()
          ACTIONS_REMOVED=()
          VIEWS_CHANGED=()

          # Analyze filters
          while IFS= read -r line; do
            if [[ $line =~ ^\+.*apply_filters\([[:space:]]*[\'\"]([^\'\"]+)[\'\"] ]]; then
              FILTERS_ADDED+=("${BASH_REMATCH[1]}")
            elif [[ $line =~ ^\-.*apply_filters\([[:space:]]*[\'\"]([^\'\"]+)[\'\"] ]]; then
              FILTERS_REMOVED+=("${BASH_REMATCH[1]}")
            fi
          done <<< "$DIFF"

          # Analyze actions
          while IFS= read -r line; do
            if [[ $line =~ ^\+.*do_action\([[:space:]]*[\'\"]([^\'\"]+)[\'\"] ]]; then
              ACTIONS_ADDED+=("${BASH_REMATCH[1]}")
            elif [[ $line =~ ^\-.*do_action\([[:space:]]*[\'\"]([^\'\"]+)[\'\"] ]]; then
              ACTIONS_REMOVED+=("${BASH_REMATCH[1]}")
            fi
          done <<< "$DIFF"

          # Analyze views
          while IFS= read -r line; do
            if [[ $line =~ diff\ --git\ a/src/views/([^\.]*)\.php ]]; then
              VIEWS_CHANGED+=("${BASH_REMATCH[1]}")
            fi
          done <<< "$DIFF"

          # Remove duplicates
          FILTERS_ADDED=($(printf "%s\n" "${FILTERS_ADDED[@]}" | sort -u))
          FILTERS_REMOVED=($(printf "%s\n" "${FILTERS_REMOVED[@]}" | sort -u))
          ACTIONS_ADDED=($(printf "%s\n" "${ACTIONS_ADDED[@]}" | sort -u))
          ACTIONS_REMOVED=($(printf "%s\n" "${ACTIONS_REMOVED[@]}" | sort -u))
          VIEWS_CHANGED=($(printf "%s\n" "${VIEWS_CHANGED[@]}" | sort -u))

          # Check if any changes were detected
          TOTAL_CHANGES=$((${#FILTERS_ADDED[@]} + ${#FILTERS_REMOVED[@]} + ${#ACTIONS_ADDED[@]} + ${#ACTIONS_REMOVED[@]} + ${#VIEWS_CHANGED[@]}))

          if [ $TOTAL_CHANGES -eq 0 ]; then
            echo "changes-detected=false" >> $GITHUB_OUTPUT
          else
            echo "changes-detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Create changelog entry
        id: create-changelog
        if: steps.analyze-changes.outputs.changes-detected == 'true'
        run: |
          # Generate changelog content
          CHANGELOG_ENTRIES=()

          if [ ${#FILTERS_ADDED[@]} -gt 0 ]; then
            CHANGELOG_ENTRIES+=("* Tweak - Added filters: \`$(IFS='`, `'; echo "${FILTERS_ADDED[*]}")\`")
          fi
          if [ ${#FILTERS_REMOVED[@]} -gt 0 ]; then
            CHANGELOG_ENTRIES+=("* Tweak - Removed filters: \`$(IFS='`, `'; echo "${FILTERS_REMOVED[*]}")\`")
          fi
          if [ ${#ACTIONS_ADDED[@]} -gt 0 ]; then
            CHANGELOG_ENTRIES+=("* Tweak - Added actions: \`$(IFS='`, `'; echo "${ACTIONS_ADDED[*]}")\`")
          fi
          if [ ${#ACTIONS_REMOVED[@]} -gt 0 ]; then
            CHANGELOG_ENTRIES+=("* Tweak - Removed actions: \`$(IFS='`, `'; echo "${ACTIONS_REMOVED[*]}")\`")
          fi
          if [ ${#VIEWS_CHANGED[@]} -gt 0 ]; then
            CHANGELOG_ENTRIES+=("* Tweak - Changed views: \`$(IFS='`, `'; echo "${VIEWS_CHANGED[*]}")\`")
          fi

          # Create changelog entry
          if [ ${#CHANGELOG_ENTRIES[@]} -gt 0 ]; then
            # Create changelog directory if it doesn't exist
            mkdir -p changelog

            # Generate filename
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            SHA_SHORT=$(git rev-parse --short ${{ github.sha }})
            FILENAME="task-analyze-changes-$TIMESTAMP-$SHA_SHORT"

            # Create changelog file
            {
              echo "---"
              echo "type: tweak"
              echo "significance: patch"
              echo "---"
              echo ""
              for entry in "${CHANGELOG_ENTRIES[@]}"; do
                echo "$entry"
              done
            } > "changelog/$FILENAME.md"

            echo "changelog-file=$FILENAME.md" >> $GITHUB_OUTPUT
            echo "Created changelog entry: changelog/$FILENAME.md"
          fi

      - name: Set output for analysis summary
        id: set-summary
        run: |
          if [ "${{ steps.analyze-changes.outputs.changes-detected }}" == "true" ]; then
            # Generate summary for display
            SUMMARY=""
            if [ ${#FILTERS_ADDED[@]} -gt 0 ]; then
              SUMMARY+="* Tweak - Added filters: \`$(IFS='`, `'; echo "${FILTERS_ADDED[*]}")\`\n"
            fi
            if [ ${#FILTERS_REMOVED[@]} -gt 0 ]; then
              SUMMARY+="* Tweak - Removed filters: \`$(IFS='`, `'; echo "${FILTERS_REMOVED[*]}")\`\n"
            fi
            if [ ${#ACTIONS_ADDED[@]} -gt 0 ]; then
              SUMMARY+="* Tweak - Added actions: \`$(IFS='`, `'; echo "${ACTIONS_ADDED[*]}")\`\n"
            fi
            if [ ${#ACTIONS_REMOVED[@]} -gt 0 ]; then
              SUMMARY+="* Tweak - Removed actions: \`$(IFS='`, `'; echo "${ACTIONS_REMOVED[*]}")\`\n"
            fi
            if [ ${#VIEWS_CHANGED[@]} -gt 0 ]; then
              SUMMARY+="* Tweak - Changed views: \`$(IFS='`, `'; echo "${VIEWS_CHANGED[*]}")\`\n"
            fi

            # Escape for GitHub Actions output
            SUMMARY_ESCAPED=$(echo -e "$SUMMARY" | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
            echo "summary=$SUMMARY_ESCAPED" >> $GITHUB_OUTPUT
          else
            echo "summary=No changes detected" >> $GITHUB_OUTPUT
          fi

          # Display in step summary
          echo "## Change Analysis" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.analyze-changes.outputs.changes-detected }}" == "true" ]; then
            echo -e "$SUMMARY" >> $GITHUB_STEP_SUMMARY
            if [ -n "${{ steps.create-changelog.outputs.changelog-file }}" ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Changelog entry created**: \`changelog/${{ steps.create-changelog.outputs.changelog-file }}\`" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
