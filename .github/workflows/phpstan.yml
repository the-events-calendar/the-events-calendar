name: 'PHPStan Tests'
on:
  pull_request:
    paths:
      - '.github/**/*'
      - '*.php'
      - 'src/**.php'
jobs:
  conditional:
    uses: ./.github/workflows/reusable/php-change-detector.yml
    with:
      skip-flag: phpstan
    outputs:
      has-php-changes: ${{ jobs.conditional.outputs.has-php-changes }}
      should-run: ${{ jobs.conditional.outputs.should-run }}

  phpstan:
    needs:
      - conditional
    if: needs.conditional.outputs.should-run == '1'
    strategy:
      matrix:
        phpVersion: [
            "7.4",
            # ----------------------------------------
            # Disabled until we get all of 7.4 passing
            # "8.0",
            # "8.1",
            # "8.2",
            # "8.3",
            # ----------------------------------------
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment
        uses: ./.github/workflows/reusable/basic-setup.yml
        with:
          setup-php: true
          setup-node: false
          php-version: ${{ matrix.phpVersion }}
          fetch-depth: 1000

      # ------------------------------------------------------------------------------
      # Enable composer caching
      # ------------------------------------------------------------------------------
      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.phpVersion }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.phpVersion }}-
            ${{ runner.os }}-composer-

      # ------------------------------------------------------------------------------
      # Override composer php version
      # ------------------------------------------------------------------------------
      - name: Set php version ${{ matrix.phpVersion }} in composer
        run: composer config platform.php ${{ matrix.phpVersion }}

      # ------------------------------------------------------------------------------
      # Install dependencies in common - ignoring php requirements
      # ------------------------------------------------------------------------------
      - name: Install common dependencies
        run: cd common &&  composer i --ignore-platform-reqs && cd ../

      # ------------------------------------------------------------------------------
      # Install dependencies - ignoring php requirements
      # ------------------------------------------------------------------------------
      - name: Install dependencies
        run: composer i --ignore-platform-reqs

      # ------------------------------------------------------------------------------
      # Run phpstan
      # ------------------------------------------------------------------------------
      - name: Run phpstan
        run: ./vendor/bin/phpstan analyse --error-format=table
