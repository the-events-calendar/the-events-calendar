
> @the-events-calendar/mcp-server@1.0.0 build:wp:ai-service
> tsx src/wordpress-integrations/ai-service/build.ts

<?php
/**
 * MCP Tool Definitions for The Events Calendar
 * 
 * This file is auto-generated by the MCP server build process.
 * DO NOT EDIT MANUALLY - changes will be lost on next build.
 * 
 * Generated on: 2025-07-23T00:23:24.657Z
 * 
 * @package TheEventsCalendar
 * @subpackage MCP
 */

// Prevent direct access.
if ( ! defined( 'ABSPATH' ) ) {
    exit;
}

// For direct inclusion, return the tool definitions.
return json_decode( '[
  {
    "name": "tec-calendar-create-update-entities",
    "description": "Create or update a calendar post (Event, Venue, Organizer, or Ticket).\n\nFor creating: provide postType and data.\nFor updating: provide postType, id, and data.\n\n⚠️ IMPORTANT: Before creating events with dates/times, ALWAYS call the tec-calendar-current-datetime tool first to get the current date, time, and timezone context. This ensures you create events with accurate dates relative to \"today\" or \"tomorrow\".\n\nDate format for events: \"YYYY-MM-DD HH:MM:SS\" (e.g., \"2024-12-25 15:00:00\")\n\nWorkflow example:\n1. First: Call tec-calendar-current-datetime tool to get current date/time\n2. Then: Create event with calculated dates based on the response\n\nExamples:\n\n// Creating an event\n{\n  \"postType\": \"event\",\n  \"data\": {\n    \"title\": \"My Event\",\n    \"start_date\": \"2024-12-25 15:00:00\",\n    \"end_date\": \"2024-12-25 17:00:00\",\n    \"description\": \"Event description\",\n    \"venue\": 123\n  }\n}\n\n// Creating a venue (using title)\n{\n  \"postType\": \"venue\",\n  \"data\": {\n    \"title\": \"Conference Center\",\n    \"address\": \"123 Main St\",\n    \"city\": \"San Francisco\",\n    \"country\": \"United States\"\n  }\n}\n\n// Creating an organizer (using title)\n{\n  \"postType\": \"organizer\",\n  \"data\": {\n    \"title\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"555-1234\"\n  }\n}",
    "inputSchema": {
      "type": "object",
      "properties": {
        "postType": {
          "type": "string",
          "enum": [
            "event",
            "venue",
            "organizer",
            "ticket"
          ],
          "description": "The type of post to create or update"
        },
        "id": {
          "type": "number",
          "description": "Post ID (required for updates, omit for creation)"
        },
        "data": {
          "type": "object",
          "description": "The post data. Required fields depend on postType: Event (title, start_date, end_date), Venue (title or venue, address, city, country), Organizer (title or organizer), Ticket (name, price). Note: For Venue and Organizer, you can use \"title\" which will be converted to the appropriate field. ⚠️ ALWAYS call tec-calendar-current-datetime tool FIRST before setting any date/time fields to ensure correct relative dates.",
          "additionalProperties": true
        }
      },
      "required": [
        "postType",
        "data"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "tec-calendar-read-entities",
    "description": "Read, list, or search calendar posts.\n\n⚠️ IMPORTANT: When filtering events by date (e.g., \"events this week\", \"upcoming events\"), ALWAYS call the tec-calendar-current-datetime tool FIRST to get the current date and calculate the appropriate date filters. Never assume or hardcode dates.\n\nUse cases:\n1. Get single post: provide postType and id\n2. List all posts: provide postType only\n3. Search posts: provide postType and query\n4. Filter by dates: FIRST call tec-calendar-current-datetime tool, THEN apply filters\n\nExamples:\n\n// Get single event\n{\"postType\": \"event\", \"id\": 123}\n\n// List all venues with pagination\n{\"postType\": \"venue\", \"per_page\": 10}\n\n// Search events with date filter (after calling tec-calendar-current-datetime)\n{\"postType\": \"event\", \"query\": \"conference\", \"eventFilters\": {\"start_date\": \"2024-12-01\"}}\n\n// Filter venues by location\n{\"postType\": \"venue\", \"venueFilters\": {\"city\": \"San Francisco\", \"state\": \"CA\"}}\n\n// List available tickets for an event\n{\"postType\": \"ticket\", \"ticketFilters\": {\"event\": 123, \"available\": true}}",
    "inputSchema": {
      "type": "object",
      "properties": {
        "postType": {
          "type": "string",
          "enum": [
            "event",
            "venue",
            "organizer",
            "ticket"
          ],
          "description": "The type of post to read"
        },
        "id": {
          "type": "number",
          "description": "Post ID for single post retrieval"
        },
        "query": {
          "type": "string",
          "description": "Search query string"
        },
        "page": {
          "type": "number",
          "description": "Page number"
        },
        "per_page": {
          "type": "number",
          "description": "Items per page"
        },
        "order": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "description": "Sort order"
        },
        "orderby": {
          "type": "string",
          "description": "Field to order by"
        },
        "status": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "Post status filter"
        },
        "include": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Include specific IDs"
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Exclude specific IDs"
        },
        "eventFilters": {
          "type": "object",
          "description": "Event-specific filters (only used when postType is \"event\")",
          "properties": {
            "start_date": {
              "type": "string",
              "description": "Event start date filter (YYYY-MM-DD). ⚠️ Call tec-calendar-current-datetime tool FIRST to get current date."
            },
            "end_date": {
              "type": "string",
              "description": "Event end date filter (YYYY-MM-DD). ⚠️ Call tec-calendar-current-datetime tool FIRST to get current date."
            },
            "venue": {
              "type": "number",
              "description": "Filter by venue ID"
            },
            "organizer": {
              "type": "number",
              "description": "Filter by organizer ID"
            },
            "featured": {
              "type": "boolean",
              "description": "Filter featured events"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "Filter by category IDs"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "Filter by tag IDs"
            }
          },
          "additionalProperties": false
        },
        "venueFilters": {
          "type": "object",
          "description": "Venue-specific filters (only used when postType is \"venue\")",
          "properties": {
            "city": {
              "type": "string",
              "description": "Filter by city"
            },
            "state": {
              "type": "string",
              "description": "Filter by state/province"
            },
            "country": {
              "type": "string",
              "description": "Filter by country"
            },
            "zip": {
              "type": "string",
              "description": "Filter by postal code"
            },
            "geo_lat": {
              "type": "number",
              "description": "Filter by latitude (requires geo_lng)"
            },
            "geo_lng": {
              "type": "number",
              "description": "Filter by longitude (requires geo_lat)"
            },
            "radius": {
              "type": "number",
              "description": "Filter by radius in km (requires geo_lat/geo_lng)"
            }
          },
          "additionalProperties": false
        },
        "organizerFilters": {
          "type": "object",
          "description": "Organizer-specific filters (only used when postType is \"organizer\")",
          "properties": {
            "email": {
              "type": "string",
              "description": "Filter by email"
            },
            "website": {
              "type": "string",
              "description": "Filter by website"
            },
            "phone": {
              "type": "string",
              "description": "Filter by phone"
            }
          },
          "additionalProperties": false
        },
        "ticketFilters": {
          "type": "object",
          "description": "Ticket-specific filters (only used when postType is \"ticket\")",
          "properties": {
            "event": {
              "type": "number",
              "description": "Filter by event ID"
            },
            "provider": {
              "type": "string",
              "description": "Filter by provider (RSVP, Ticket Commerce, WooCommerce)"
            },
            "type": {
              "type": "string",
              "enum": [
                "rsvp",
                "paid"
              ],
              "description": "Filter by ticket type"
            },
            "available": {
              "type": "boolean",
              "description": "Filter by availability"
            },
            "min_price": {
              "type": "number",
              "description": "Filter by minimum price"
            },
            "max_price": {
              "type": "number",
              "description": "Filter by maximum price"
            }
          },
          "additionalProperties": false
        }
      },
      "required": [
        "postType"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "tec-calendar-delete-entities",
    "description": "Delete a calendar post (Event, Venue, Organizer, or Ticket).\n\nBy default moves to trash. Set force=true for permanent deletion.\n\nNOTE: When deleting time-sensitive content like events, consider using the tec-calendar-current-datetime tool to verify the current date/time context before deletion.\n\nExample:\n{\"postType\": \"event\", \"id\": 123, \"force\": false}",
    "inputSchema": {
      "type": "object",
      "properties": {
        "postType": {
          "type": "string",
          "enum": [
            "event",
            "venue",
            "organizer",
            "ticket"
          ],
          "description": "The type of post to delete"
        },
        "id": {
          "type": "number",
          "description": "Post ID to delete"
        },
        "force": {
          "type": "boolean",
          "description": "true for permanent delete, false for trash (default: false)",
          "default": false
        }
      },
      "required": [
        "postType",
        "id"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "tec-calendar-current-datetime",
    "description": "Get current date and time information for both local and WordPress server timezones.\n\n⚠️ CRITICAL: You MUST call this tool BEFORE:\n- Creating any events (to calculate proper dates)\n- Filtering events by date (to know what \"today\", \"this week\", etc. means)\n- Any operation involving dates or times\n\nThis tool returns:\n- Local time (user\'s timezone) - use for creating events\n- Server time (WordPress timezone) - use for server context\n- Helpful date format examples\n\nExample response includes formatted dates for \"today at 3pm\", \"tomorrow at 10am\", etc.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false
    }
  }
]', true );
